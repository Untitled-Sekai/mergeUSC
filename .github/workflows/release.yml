name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-gnu

      - name: Debug directory structure
        run: |
          find ./crates -type d | sort
          ls -la ./crates

      - name: Create workspace Cargo.toml if missing
        run: |
          if [ ! -f "Cargo.toml" ]; then
            cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "crates/cli",
              "crates/mergeUsc_Core"
          ]

          [profile.release]
          opt-level = 3
          lto = true
          codegen-units = 1
          EOF
            echo "Created workspace Cargo.toml"
          fi

      - name: Fix case-sensitive paths
        run: |
          CORE_DIR=$(find ./crates -maxdepth 1 -type d -iname "merge*core" | head -n 1)
          if [ -z "$CORE_DIR" ]; then
            echo "ERROR: Could not find core directory!"
            exit 1
          fi
          
          CORE_NAME=$(basename "$CORE_DIR")
          echo "Found core directory: $CORE_NAME"
          
          sed -i "s|path = \"../MergeUSC_Core\"|path = \"../$CORE_NAME\"|" crates/cli/Cargo.toml
          sed -i "s|\"crates/mergeUsc_Core\"|\"crates/$CORE_NAME\"|" Cargo.toml

      - name: Build CLI
        run: |
          cargo build --release --bin mergeusc_cli
          find ./target -name "mergeusc_cli" -type f -executable

      - name: Package
        run: |
          mkdir -p release
          cp $(find ./target -name "mergeusc_cli" -type f -executable | head -n 1) release/mergeusc_cli-linux
          cd release && tar -czf mergeusc_cli-linux.tar.gz mergeusc_cli-linux

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mergeusc_cli-linux
          path: release/mergeusc_cli-linux.tar.gz
          retention-days: 1

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc

      - name: Debug directory structure
        run: |
          Get-ChildItem -Path ./crates -Recurse -Directory | Select-Object FullName

      - name: Create workspace Cargo.toml if missing
        run: |
          if (-Not (Test-Path "Cargo.toml")) {
            @"
          [workspace]
          members = [
              "crates/cli",
              "crates/MergeUSC_Core"
          ]

          [profile.release]
          opt-level = 3
          lto = true
          codegen-units = 1
          "@ | Out-File -FilePath "Cargo.toml" -Encoding utf8
            Write-Output "Created workspace Cargo.toml"
          }

      - name: Build CLI
        run: |
          cargo build --release --bin mergeusc_cli
          Get-ChildItem -Path .\target -Recurse -Filter "mergeusc_cli.exe" | Select-Object FullName

      - name: Package
        run: |
          New-Item -Path release -ItemType Directory -Force
          $binPath = (Get-ChildItem -Path .\target -Recurse -Filter "mergeusc_cli.exe" | Select-Object -First 1).FullName
          Copy-Item $binPath -Destination release\mergeusc_cli-windows.exe
          cd release
          7z a -tzip mergeusc_cli-windows.zip mergeusc_cli-windows.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mergeusc_cli-windows
          path: release/mergeusc_cli-windows.zip
          retention-days: 1

  create-release:
    name: Create GitHub Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: mergeusc_cli-linux
          path: ./artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: mergeusc_cli-windows
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          files: |
            ./artifacts/mergeusc_cli-linux.tar.gz
            ./artifacts/mergeusc_cli-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}